Resumen

Acciones clave:
- Implementada `calcular_costo_envio` con validaciones, tramos por peso, recargos y redondeo.
- Tests unitarios: casos válidos, casos inválidos y pruebas de límites (PE + AVL).
- Se recomienda ejecutar coverage, ruff y radon para verificar calidad y complejidad.

Casos de prueba 
- Válidos: peso 1 (0<p<=5), peso 5 (límite), peso 6 (5<p<=20), peso 20 (límite), peso 21 (>20), internacional, express, internacional+express.
- Inválidos: peso 0, peso negativo, destino inválido, prioridad inválida.

Comandos útiles (PowerShell):

```powershell
# activar venv
.\.venv\Scripts\Activate.ps1

# tests
pytest -q

# coverage
coverage run -m pytest
coverage report -m

# estilo
ruff check .
ruff check . --fix

# complejidad
radon cc -s src
```

Cómo encajan en un flujo TDD + calidad

- PE + AVL: diseñar los tests unitarios (casos representativos + límites).
- TDD: escribir tests (PE/AVL) primero, luego implementar `calcular_costo_envio`.
- Ruff: mantener estilo y detectar problemas simples durante desarrollo.
- Radon: evaluar complejidad y decidir refactorizaciones para mejorar testabilidad.
- Hypothesis: añadir pruebas de propiedad para capturar casos inesperados automáticamente.
